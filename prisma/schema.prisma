generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Projects {
  description  String
  difficulty   Int
  rating       Int
  departments  String?
  project_id   Int          @id
  name         String
  team_lead    String
  created_date DateTime
  Departments  Departments? @relation(fields: [departments], references: [department_id])
  User         User[]       @relation("ProjectsToUser")
}

model Departments {
  department_id String     @id
  name          String
  projects      Projects[]
}

model User {
  batch           String?
  department      String?
  discord         String?
  email           String       @unique
  faculty         String?
  gender          String?
  hashedPassword  String
  id              String       @id
  image           String?
  linkedin        String?
  major           String?
  name            String?
  phone           String?
  personal_email  String?
  role            String
  telegram        String?
  total_events    Int?         @default(0)
  wallet          String?
  year            String?
  isAdmin         Boolean?     @default(false)
  events          Event[]      @relation("EventToUser")
  projects        Projects[]   @relation("ProjectsToUser")
  Attendance      Attendance[] @relation("attendanceToUser")
  AttendanceTaken Attendance[]
}

model Event {
  endDate    DateTime     @db.Date
  hasStarted Boolean      @default(false)
  name       String
  id         String       @id @default(uuid())
  qr_code    String?
  startDate  DateTime     @default(now()) @db.Date
  Attendance Attendance[]
  attendees  User[]       @relation("EventToUser")
}

model Log {
  date    DateTime? @default(now())
  message String
  id      String    @id @default(uuid())
  title   String
  type    LogType
}

model Attendance {
  id      String @id
  eventId String
  user    User   @relation(fields: [userId], references: [id])
  Event   Event  @relation(fields: [eventId], references: [id])
  User    User[] @relation("attendanceToUser")
  userId  String
}

enum LogType {
  WARNING
  ERROR
}
